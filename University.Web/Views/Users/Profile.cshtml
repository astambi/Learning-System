@model UserProfileViewModel

@{
    ViewData["Title"] = "Profile";
}

<partial name="_ProfilePartial" for="User" />

<h3>
    Roles:
    @if (Model.Roles.Any())
    {
        <span class="lead">@string.Join(", ", Model.Roles.Select(s => s.ToFriendlyName()))</span>
    }
    else
    {
        <span class="lead">No roles</span>
    }
</h3>

<section class="d-flex flex-wrap justify-content-around">
    <a asp-controller="@WebConstants.UsersController"
       asp-action="@nameof(University.Web.Controllers.UsersController.Courses)" class="btn btn-lg btn-outline-info my-1">
        <h4>Courses <span class="badge badge-info">@Model.User.CoursesCount</span></h4>
    </a>
    <a asp-controller="@WebConstants.UsersController"
       asp-action="@nameof(University.Web.Controllers.UsersController.Resources)" class="btn btn-lg btn-outline-info my-1">
        <h4>Resources <span class="badge badge-info">@Model.User.ResourcesCount</span></h4>
    </a>
    <a asp-controller="@WebConstants.UsersController"
       asp-action="@nameof(University.Web.Controllers.UsersController.Exams)" class="btn btn-lg btn-outline-info my-1">
        <h4>Exams <span class="badge badge-info">@Model.User.ExamSubmissionsCount</span></h4>
    </a>
    <a asp-controller="@WebConstants.UsersController"
       asp-action="@nameof(University.Web.Controllers.UsersController.Certificates)" class="btn btn-lg btn-outline-info my-1">
        <h4>Certificates <span class="badge badge-info">@Model.User.CertificatesCount</span></h4>
    </a>
    <a asp-controller="@WebConstants.OrdersController"
       asp-action="@nameof(OrdersController.Index)" class="btn btn-lg btn-outline-info">
        <h4>Payments <span class="badge badge-info">@Model.User.OrdersCount</span></h4>
    </a>
</section>
